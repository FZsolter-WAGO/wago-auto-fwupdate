#!/bin/bash

input1="$1"
input2="$2"

main () {
    if [ "$EUID" -ne 0 ]
    then
        echo "ERROR: Please run the script as root"
        exit 1
    fi
    if ps aux | grep -v grep | grep wago-auto-fwupdate > /dev/null; then
        echo "ERROR: Another instance of the script is already running."
        exit 1
    fi
    WAGO_FWUPDATE="/etc/config-tools/fwupdate"
    WAGO_COUPLER_DETAILS="/etc/config-tools/get_coupler_details"
    CURRENT_ORDER_NUMBER="$($WAGO_COUPLER_DETAILS order-number)"
    case $CURRENT_ORDER_NUMBER in
        750-8212)
            FW_TYPE=pfc_g2
            ;;
        *)
            echo ERROR: Unsupported type of device
            exit 1
            ;;
    esac
    case "$input1" in
        list)
            list
            ;;
        install)
            install
            ;;
        *)
            echo "   wago-auto-fwupdate 1.0.0 - Tool for downloading and deploying a specific WAGO firmware version from Github"
            echo ""
            echo "   Usage: .../wago-auto-fwupdate | bash -s (help|list|install \"FIRMWARE_REVISION\")"
            echo ""
            echo "   Example: .../wago-auto-fwupdate | bash -s list"
            echo "   Example: .../wago-auto-fwupdate | bash -s install \"04.03.03(25)\""
            echo ""
            echo "   Note, that during the fwupdate process you will have to apply the changes in the end by running \"/etc/config-tools/fwupdate finish\" and \"/etc/config-tools/fwupdate clear\""
            echo ""
            ;;
    esac
}

install() {
    if [[ -z "$input2" ]]; then
        echo "ERROR: Please enter a firmware revision, like \"04.03.03(25)\""
        exit 1
    fi
    CURRENT_FWUPDATE_STATUS=$($WAGO_FWUPDATE status | grep status= | awk -F'=' '{print $2}')
    if [[ -z "$CURRENT_FWUPDATE_STATUS" ]]; then
        echo "ERROR: /etc/config-tools/fwupdate is not available"
        exit 1
    fi
    if [[ "$CURRENT_FWUPDATE_STATUS" != "inactive" ]]; then
        echo "ERROR: Firmware update is in progress"
        exit 1
    fi
    echo "Trying to download $input2 for $CURRENT_ORDER_NUMBER..."
    wget -qO /tmp/FW.md5 --no-check-certificate "https://raw.githubusercontent.com/FZsolter-WAGO/wago-auto-fwupdate/main/firmwares/$FW_TYPE/$input2/FW.md5" &>/dev/null
    if [ ! -s "/tmp/FW.md5" ]; then
        echo "ERROR: Invalid firmware revision input"
        exit 1
    fi
    wget -O /tmp/FW.raucb --no-check-certificate "https://raw.githubusercontent.com/FZsolter-WAGO/wago-auto-fwupdate/main/firmwares/$FW_TYPE/$input2/FW.raucb"
    if [ ! -s "/tmp/FW.raucb" ]; then
        echo "ERROR: Error while downloading firmware file"
        exit 1
    fi
    downloaded_md5=$(md5sum /tmp/FW.raucb | awk '{print $1}')
    expected_md5=$(cat /tmp/FW.md5)
    if [ "$downloaded_md5" != "$expected_md5" ]; then
        echo "ERROR: Firmware file validation failed. The downloaded file is not valid."
        exit 1
    fi
    FIRST_TRY=true
    while true; do
        CURRENT_FWUPDATE_STATUS=$($WAGO_FWUPDATE status | grep status= | awk -F'=' '{print $2}')
        case $CURRENT_FWUPDATE_STATUS in
            inactive)
                if ! $FIRST_TRY; then
                    echo "ERROR: Something went wrong during the update"
                    exit 1
                fi
                FIRST_TRY=false
                $WAGO_FWUPDATE activate &>/dev/null
                ;;
            prepared)
                mv /tmp/FW.raucb /tmp/fwupdate/FW.raucb
                $WAGO_FWUPDATE start -q --path /tmp/fwupdate &>/dev/null
                exit 0
                ;;
            error | finished)
                $WAGO_FWUPDATE clear &>/dev/null
                exit 0
                ;;
        esac
        sleep 10
    done
}

list () {
    wget -q -O /tmp/wago-auto-fwupdate.list --no-check-certificate https://raw.githubusercontent.com/FZsolter-WAGO/wago-auto-fwupdate/main/firmwares/list &>/dev/null
    if [ $? -ne 0 ]; then
        echo "ERROR: Failed to download the list"
        exit 1
    fi
    FIRST_FOUND=true
    while IFS= read -r line; do
        line_fw_type=$(echo "$line" | awk '{print $1}')
        line_fw_version=$(echo "$line" | awk '{print $2}')
        if [ "$line_fw_type" = "$FW_TYPE" ]; then
            if $FIRST_TRY; then
                echo "The following firmware revisions are available"
                FIRST_TRY=false
            fi
            echo "  \"$line_fw_version\""
        fi
    done < /tmp/wago-auto-fwupdate.list
    rm /tmp/wago-auto-fwupdate.list -f
    if $FIRST_TRY; then
        echo ERROR: Unsupported type of device
    fi
    exit 0
}

main